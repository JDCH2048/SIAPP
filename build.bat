:: 
:: siapp-sdk
::
:: SPDX-License-Identifier: MIT
:: Copyright 2020 Siemens AG
::
:: Authors:
::   Lukas Wimmer <lukas.wimmer@siemens.com>
::

@echo off
SETLOCAL

SET OUTPUT_DIRECTORY=build
SET powershell_cmd=powershell.exe

SET me=%~nx0
SET me_path=%~dp0
SET rootfs_size=0
SET siapp_size=0

if "%~1" == "" (
   echo %me% - ERROR: project directory path not specified! 1>&2
   echo %me% - SYNOPSIS: build.bat PROJECTPATH [-name NAME] [-version VERSION]
   exit /b 1
)

set projectDirectoryPath=%~1

set projectName=%~nx1
set version=0.0.1

shift
:optionalArgumentsLoop
if not "%1" == "" (
   if "%1" == "-name" (
      set projectName=%2
      shift
   )
   if "%1" == "-version" (
      set version=%2
      shift
   )
   shift
   goto :optionalArgumentsLoop
)
   
@FOR /F %%s IN ('%powershell_cmd% -command "(get-item env:'projectName').Value.ToLower().replace(' ','')"') DO @set projectName=%%s

set buildDirectoryPath=%OUTPUT_DIRECTORY%\%projectName%-%version%

rmdir /s /q "%buildDirectoryPath%" 1>&2

md "%buildDirectoryPath%"
md "%buildDirectoryPath%\tmp"
md "%buildDirectoryPath%\tmp\meta-inf.pmf"
md "%buildDirectoryPath%\tmp\siapp"
md "%buildDirectoryPath%\tmp\out"

call :cleanup

call :createParamFile
if %ERRORLEVEL% NEQ 0 (
   echo %me% - Error: Could not add parameter schema! Aborting... 1>&2
   call :cleanup
   exit /b %ERRORLEVEL%
)

call :createRootfs
if %ERRORLEVEL% NEQ 0 (
   echo %me% - Error: Could not create root filesystem! Aborting... 1>&2
   call :cleanup
   exit /b %ERRORLEVEL%
)

call :createOCIFile
if %ERRORLEVEL% NEQ 0 (
  echo %me% - Error: Could not create OCI file! Aborting... 1>&2
  call :cleanup
  exit /b %ERRORLEVEL%
)

call :createMetaInfoFile
if %ERRORLEVEL% NEQ 0 (
   echo %me% - Error: Could not create metainfo file! Aborting... 1>&2
   call :cleanup
   exit /b %ERRORLEVEL%
)

call :packSIAPP
if %ERRORLEVEL% NEQ 0 (
   echo %me% - Error: Could not pack SIAPP! Aborting... 1>&2
   call :cleanup
   exit /b %ERRORLEVEL%
)

echo %me% - ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
echo %me% - Size of unzipped root file system:                       %rootfs_size_mb% MB
if %rootfs_size_mb% GEQ 350 (
   echo %me% - Warning max. supported root file system size of 350 MB is reached
) 
echo %me% - Recommended configured siapp slot size:                  %recommended_siapp_slot_size% MB
echo %me% - Size of generated siapp installation file:               %siapp_size_mb% MB
echo %me% - ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

echo %me% - Successfully generated %buildDirectoryPath%\%projectName%-%version%.siapp
exit /b 0




:createRootfs
   if not exist "%projectDirectoryPath%\Dockerfile.arm32v7" (
      echo %me% - Error: File %projectDirectoryPath%\Dockerfile.arm32v7 does not exist! 1>&2
      exit /b 2
   )

   docker build -t %projectName%-arm32v7-%version% -f "%projectDirectoryPath%\Dockerfile.arm32v7" "%projectDirectoryPath%"
   if %ERRORLEVEL% NEQ 0 (
      echo %me% - Error: Could not build docker image! 1>&2
      exit /b %ERRORLEVEL%
   )

   docker create --name %projectName%-arm32v7 %projectName%-arm32v7-%version%
   if %ERRORLEVEL% NEQ 0 (
      echo %me% - Error: Could not create docker container! 1>&2
      exit /b %ERRORLEVEL%
   )

   docker export --output="%buildDirectoryPath%\tmp\siapp\rootfs.tar" %projectName%-arm32v7
   if %ERRORLEVEL% NEQ 0 (
      echo %me% - Error: Could not export root filesystem out of docker container! 1>&2
      call :cleanup
      exit /b %ERRORLEVEL%
   )

   @FOR /F %%s IN ('%powershell_cmd% -command "(Get-Item '%buildDirectoryPath%\tmp\siapp\rootfs.tar').length"') DO @set rootfs_size=%%s
   
   if %rootfs_size% LEQ 0 (
      echo %me% - Error: Could not read rootfs file size! Aborting... 1>&2
      call :cleanup
      exit /b %ERRORLEVEL%
   )
   set /a "rootfs_size_mb=(%rootfs_size%/1024/1024)+1"
   set /a "recommended_siapp_slot_size=((%rootfs_size%/7/1024/1024)*10)+31"
   
   exit /b 0

:createOCIFile
   if not exist "%projectDirectoryPath%\config.json" (
      if not exist "%me_path%\templates\config.json" (
         echo %me% - Error: Could not find OCI Template File %me_path%\templates\config.json not found. 1>&2
         call :cleanup
         exit /b 3
         )
      echo %me% - Info: OCI File %projectDirectoryPath%\config.json not found. OCI File is generated by OCI Template File! 1>&2
      copy "%me_path%\templates\config.json" "%projectDirectoryPath%\config.json" 1>&2
   )

   %powershell_cmd% -nologo -noprofile -command "$ociJson=Get-Content '%projectDirectoryPath%\config.json' -raw | ConvertFrom-Json;" ^
                                    "$dockerJson=docker inspect %projectName%-arm32v7 | ConvertFrom-Json;" ^
                                    "$ociJson.process.args=$null;" ^
                                    "if ($dockerJson.Config.Entrypoint) {$ociJson.process.args=$dockerJson.Config.Entrypoint};" ^
                                    "if ($dockerJson.Config.Cmd) {$ociJson.process.args+=$dockerJson.Config.Cmd};" ^
                                    "if (!$ociJson.process.args) {$ociJson.process.args='/bin/sh'};" ^
                                    "if ($dockerJson.Config.Env) {$ociJson.process.env=$dockerJson.Config.Env};" ^
                                    "if ($dockerJson.Config.WorkingDir) {$ociJson.process.cwd=$dockerJson.Config.WorkingDir};" ^
                                    "$ociJson.root.path='rootfs';" ^
                                    "$ociJson | ConvertTo-Json -depth 10 | set-content '%buildDirectoryPath%\tmp\siapp\config.json'"
   exit /b %ERRORLEVEL%

:createMetaInfoFile
   %powershell_cmd% -nologo -noprofile -command "$dockerJson=docker inspect %projectName%-arm32v7 | ConvertFrom-Json;" ^
                                              "Write-Output ies_pkgname=%projectName%" ^
                                              "ies_pkgid=$([guid]::NewGuid().ToString())" ^
                                              "ies_pkgrev=%version%" ^
                                              "ies_pkgtype=SIAPP" ^
                                              "ies_pkgarch=armv7" ^
                                              "ies_pkgrootfs_size_mb=%rootfs_size_mb%" ^
                                              "ies_pkgcontainerid=$($dockerJson.Id)" ^
                                              "ies_pkgimageid=$($dockerJson.Image) " ^
                                              "ies_pkgbuildtime=$(Get-Date -Format 'dd.MM.yyyy  HH:mm')" ^
                                              " | set-content '%buildDirectoryPath%\tmp\meta-inf.pmf\pim.pid'"
   exit /b %ERRORLEVEL%

:packSIAPP
   tar -cf %buildDirectoryPath%\tmp\out\meta-inf.pmf -C %buildDirectoryPath%\tmp\meta-inf.pmf *
   if %ERRORLEVEL% NEQ 0 (
      echo %me% - Error: Unable to pack Meta Information! 1>&2
      call :cleanup
      exit /b %ERRORLEVEL%
   )
   tar -czf %buildDirectoryPath%\tmp\out\siapp.tar.gz -C %buildDirectoryPath%\tmp\siapp *
   if %ERRORLEVEL% NEQ 0 (
      echo %me% - Error: Unable to pack Application! 1>&2
      call :cleanup
      exit /b %ERRORLEVEL%
   )
   if exist "%buildDirectoryPath%\tmp\cmd" (
	   tar -czf %buildDirectoryPath%\tmp\out\cmd.tar.gz -C %buildDirectoryPath%\tmp\cmd *
	   if %ERRORLEVEL% NEQ 0 (
         echo %me% - Error: Unable to pack parameter schema! 1>&2
         call :cleanup
         exit /b %ERRORLEVEL%
	   )
   )
   tar -cf %buildDirectoryPath%\%projectName%-%version%.siapp -C %buildDirectoryPath%\tmp\out *
   if %ERRORLEVEL% NEQ 0 (
      echo %me% - Error: Unable to pack Siapp! 1>&2
      call :cleanup
      exit /b %ERRORLEVEL%
   )
   
   @FOR /F %%s IN ('%powershell_cmd% -command "(Get-Item '%buildDirectoryPath%\%projectName%-%version%.siapp').length"') DO @set siapp_size=%%s
   
   if %siapp_size% LEQ 0 (
      echo %me% - Error: Could not read siapp file size! Aborting... 1>&2
      call :cleanup
      exit /b %ERRORLEVEL%
   )
   set /a "siapp_size_mb=(%siapp_size%/1024/1024)+1"
   exit /b 0

:createParamFile
   if exist "%projectDirectoryPath%\cmd" (
      md "%buildDirectoryPath%\tmp\cmd"
      xcopy "%projectDirectoryPath%\cmd" "%buildDirectoryPath%\tmp\cmd" /s /e > nul
   )
   exit /b 0

:cleanup
   docker rm %projectName%-arm32v7 1>&2
   exit /b 0